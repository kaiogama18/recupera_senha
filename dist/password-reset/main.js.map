{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_consts/consts.ts","webpack:///./src/app/_services/password/password.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/reset-form/reset-form.component.html","webpack:///./src/app/reset-form/reset-form.component.scss","webpack:///./src/app/reset-form/reset-form.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export const API = 'https://api.rhmobi.com.br/v1/'\nexport const SALT_KEY = 'f5b99242-6504-4ca3-90f2-05e78e5761ef'\n","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { API, SALT_KEY } from 'src/app/_consts/consts'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PasswordService {\n\n  constructor(private http: HttpClient) { }\n\n  resetPassword(categoria: string, token: string, senha: string) {\n    const data = {\n      categoria,\n      senha,\n      SALT_KEY,\n    }\n\n    console.log(JSON.stringify(data))\n\n    return this.http.post(`${API}/candidatos/alterar_senha/${token}`, data, this.setHeaders())\n  }\n\n  private setHeaders() {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      }),\n    }\n    return httpOptions\n  }\n\n}\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { ResetFormComponent } from './reset-form/reset-form.component'\n\nconst routes: Routes = [\n  {\n    path: 'password',\n    component: ResetFormComponent,\n    children: [\n      {\n        path: ':id',\n        component: ResetFormComponent,\n      }\n    ]\n  },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'password-reset';\n}\n","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { ResetFormComponent } from './reset-form/reset-form.component'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ResetFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n  <!-- <h1 *ngIf=\\\"userToken$ | async as userToken\\\">\\n    {{ userId }}\\n  </h1> -->\\n  <form class=\\\"card\\\" accept-charset=\\\"utf-8\\\" (ngSubmit)=\\\"resetPassword()\\\" [formGroup]=\\\"resetForm\\\">\\n    <label class=\\\"card-title bg-red\\\">Redefinição de senha</label>\\n    <div class=\\\"input\\\">\\n      <label class=\\\"secondary-text\\\">Digite abaixo a nova senha para acesso ao RH Mobi</label>\\n      <p class=\\\"text-form\\\"><i class=\\\"fa fa-lock\\\"></i>Nova senha:</p>\\n      <input maxlength=\\\"255\\\" size=\\\"50\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\n    </div>\\n    <div class=\\\"input\\\">\\n      <p class=\\\"text-form\\\"><i class=\\\"fa fa-lock\\\"></i>Repita a nova senha:</p>\\n      <input maxlength=\\\"255\\\" size=\\\"50\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" />\\n      <small *ngIf=\\\"passwordsDontMatch()\\\" style=\\\"color: red;\\\">As senhas inseridas são diferentes</small>\\n      <small *ngIf=\\\"success\\\" style=\\\"color: green;\\\">Sucesso ao redefinir senha</small>\\n      <small *ngIf=\\\"!success && success !== undefined\\\" style=\\\"color: red;\\\">A redefinição falhou</small>\\n    </div>\\n    <div class=\\\"pd-5\\\">\\n      <button class=\\\"bg-ativo\\\" [ngClass]=\\\"{'bg-inativo': showLoader, 'bg-ativo': !showLoader}\\\" type=\\\"submit\\\">Redefinir</button>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0LWZvcm0vcmVzZXQtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { switchMap, finalize } from 'rxjs/operators'\nimport { ActivatedRoute, ParamMap } from '@angular/router'\nimport { FormGroup, Validators, FormControl } from '@angular/forms'\nimport { PasswordService } from '../_services/password/password.service';\n\n@Component({\n  selector: 'app-reset-form',\n  templateUrl: './reset-form.component.html',\n  styleUrls: ['./reset-form.component.scss'],\n})\nexport class ResetFormComponent implements OnInit {\n  userToken$: Observable<any>\n  resetForm: FormGroup\n  noMatch = false\n  token: string\n  category: string\n  showLoader = false\n  success: boolean\n\n  constructor(private route: ActivatedRoute, private passwordService: PasswordService) { }\n\n  ngOnInit() {\n    this.userToken$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => params.getAll('id'))\n    )\n    this.userToken$.subscribe((param) => {\n      const splittedParam = param.split('!')\n      this.token = splittedParam[1]\n      this.category = splittedParam[0]\n    })\n    this.resetForm = new FormGroup({\n      password: new FormControl('', Validators.required),\n      confirmPassword: new FormControl('', Validators.required),\n    })\n  }\n\n  resetPassword() {\n    if (this.passwordsDontMatch()) {\n      return\n    }\n\n    this.showLoader = true\n\n    this.passwordService.resetPassword(this.category.trim(), this.token.trim(), this.resetForm.get('password').value)\n      .subscribe(\n        (res) => {\n          this.showLoader = false\n          this.success = true\n        },\n        (error) => {\n          console.log('falhou')\n          this.showLoader = false\n          this.success = false\n        }\n      )\n  }\n\n  passwordsDontMatch() {\n    if (this.resetForm.get('password').value !== this.resetForm.get('confirmPassword').value) {\n      this.noMatch = true\n      return true\n    } else {\n      this.noMatch = false\n      return false\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}